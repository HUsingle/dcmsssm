<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org//dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcms.dao.StudentMapper">
    <sql id="sqlColumn">
        s_number as username, s_name as name, s_phone as phone,
        s_major_class as studentClass, s_password as password, s_email as email,
        s_college as college
    </sql>
    <select id="getAllStudent" resultType="student" parameterType="string">
        select <include refid="sqlColumn"/> from  db_student order by s_number ${sort}
    </select>
    <select id="getSearchStudent" resultType="student" parameterType="string">
       select <include refid="sqlColumn"/> from db_student
        where s_name like concat('%',#{search},'%') union
        select <include refid="sqlColumn"/> from db_student
        where s_major_class like concat('%',#{search},'%')
        order by username ${sort}
    </select>
     <!--<insert id="addStudent" parameterType="student">
         insert into db_student(s_number,s_name,s_phone,s_major_class,s_password,s_email,s_college)
         values(#{username},#{name},#{phone},#{studentClass},#{password},#{email},#{college})
     </insert>-->
    <update id="updateStudent" parameterType="student">
        update db_student set s_name=#{name},s_phone=#{phone},s_major_class=#{studentClass},
        s_password=#{password},s_email=#{email},s_college=#{college}  where s_number=#{username}
    </update>
    <delete id="deleteStudent" parameterType="long">
        delete from db_student where s_number in
        <foreach collection="array" item="username" open="(" separator="," close=")">
            #{username}
        </foreach>
        <!--collection传人集合的参数名称
            item为每一项的名称
            open,close是以什么元素将这个集合包围，separator为分割符-->
    </delete>
    <insert id="addOrUpdateStudent" parameterType="student">
        replace into db_student(s_number,s_name,s_phone,s_major_class,s_password,s_email,s_college)
        values
        <foreach collection="list" item="student" separator=",">
        (#{student.username},#{student.name},#{student.phone},
            #{student.studentClass},#{student.password},#{student.email},#{student.college})
        </foreach>
    </insert>
</mapper>
